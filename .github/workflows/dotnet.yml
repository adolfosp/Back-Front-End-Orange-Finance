name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    environment:
      name: actions_back_front_orange_finance
    steps:
      # Checkout do código
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      # Semantic Release
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      # Configurar .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.x

      # Restaurar dependências
      - name: Restore dependencies
        run: dotnet restore

      # Construir aplicação
      - name: Build application
        run: dotnet build --no-restore --configuration Release

      # Publicar aplicação
      - name: Publish application
        run: dotnet publish --no-build --configuration Release -o out

      # Fazer login no DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Construir e enviar a imagem Docker
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/orange-finance-backend:latest

      # Opcional: Varredura de vulnerabilidades na imagem Docker
      - name: Scan Docker image for vulnerabilities
        uses: aquasecurity/trivy-action@0.29.0
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/orange-finance-backend:latest
