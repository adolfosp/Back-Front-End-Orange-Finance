// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrangeFinance.Infrastructure.Persistence;

#nullable disable

namespace OrangeFinance.Infrastructure.Migrations
{
    [DbContext(typeof(OrangeFinanceDbContext))]
    [Migration("20250716002644_AddNewEntity")]
    partial class AddNewEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrangeFinance.Domain.Farms.Models.FarmModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Farms", (string)null);
                });

            modelBuilder.Entity("OrangeFinance.Domain.Finances.Models.FinanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("HarvestId")
                        .HasColumnType("uuid");

                    b.Property<double>("Money")
                        .HasColumnType("double precision");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("TypeTransaction")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("HarvestId");

                    b.ToTable("Finances");
                });

            modelBuilder.Entity("OrangeFinance.Domain.Harvests.Models.HarvestModel", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("CropType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("FarmId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("HarvestDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.Property<int>("TypeUnit")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("Harvests", (string)null);
                });

            modelBuilder.Entity("OrangeFinance.Domain.Finances.Models.FinanceModel", b =>
                {
                    b.HasOne("OrangeFinance.Domain.Harvests.Models.HarvestModel", "Harvest")
                        .WithMany("Finances")
                        .HasForeignKey("HarvestId");

                    b.Navigation("Harvest");
                });

            modelBuilder.Entity("OrangeFinance.Domain.Harvests.Models.HarvestModel", b =>
                {
                    b.HasOne("OrangeFinance.Domain.Farms.Models.FarmModel", "Farm")
                        .WithMany("Harvests")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("OrangeFinance.Domain.Farms.Models.FarmModel", b =>
                {
                    b.Navigation("Harvests");
                });

            modelBuilder.Entity("OrangeFinance.Domain.Harvests.Models.HarvestModel", b =>
                {
                    b.Navigation("Finances");
                });
#pragma warning restore 612, 618
        }
    }
}
